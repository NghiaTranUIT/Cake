import Modelizer
import Path

extension XcakeProject {
    func generateBatterDotSwift(tips: [Module]) throws {
        var string = """
            // Generated by Cake. Regeneration will occur! Edits will be lost!
            // Modules are sorted *topologically*.

            """

        for module in tips.flattened {
            string += "@_exported import \(module.name)\n"
        }
        try string.write(to: caked.join("Batter.swift").makeWritable()).chmod(0o444)
    }

    func generateDependenciesDotSwift(importNames: [String]) throws {
        var string = """
            // Generated by Cake. Regeneration will occur! Edits will be lost!
            // We only export _directly_specified_ dependencies.

            """

        for moduleName in importNames {
            string += "@_exported import \(moduleName)\n"
        }
        try string.write(to: caked.join("Dependencies.swift").makeWritable()).chmod(0o444)
    }
}

private extension Path {
    func makeWritable() throws -> Path {
        if isFile {
            return try chmod(0o600)
        } else {
            return self
        }
    }
}
